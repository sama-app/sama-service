worker_processes auto;
worker_rlimit_nofile 8192;

events {
  worker_connections  1024;
}

error_log /dev/stdout warn;
pid       /var/run/nginx.pid;

http {
  server_tokens off;

  include  /etc/nginx/conf/mime.types;
  include  /etc/nginx/proxy.conf;
  default_type  application/octet-stream;

  server_names_hash_bucket_size 128;

  ###############
  ### Static ###
  ###############
  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay off;

  ###################
  ### Compression ###
  ###################
  gzip on;

  # Enable compression both for HTTP/1.0 and HTTP/1.1 (required for CloudFront).
  gzip_http_version  1.0;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and cpu usage, offering about
  # 75% reduction for most ascii files (almost identical to level 9).
  gzip_comp_level    5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length    256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  gzip_proxied       any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary          on;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  ###############
  ### Logging ###
  ###############
  log_format json_combined escape=json
  '{'
    '"message": "$remote_addr - $status $request $http_referer $http_user_agent $http_true_client_ip",'
    '"forwarded_for":"$http_x_forwarded_for",'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"true_client_ip":"$http_true_client_ip",'
    '"remote_user":"$remote_user",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent"'
   '}';

  access_log /dev/stdout json_combined;

  ###############
  ### Servers ###
  ###############
  server {
    listen 8080;

    location / {
      proxy_pass http://sama-service:3000;
    }
  }
}